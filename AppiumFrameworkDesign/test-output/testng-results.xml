<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="3" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-02-27T12:51:57 EST" name="Suite" finished-at="2024-02-27T12:53:08 EST" duration-ms="70731">
    <groups>
      <group name="Smoke">
        <method signature="eCommerce_tc_2.fillForm(java.util.HashMap)[pri:0, instance:org.company.Android.eCommerce_tc_2@1a4927d6]" name="fillForm" class="org.company.Android.eCommerce_tc_2"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2024-02-27T12:51:57 EST" name="Error Validation Test" finished-at="2024-02-27T12:52:27 EST" duration-ms="30085">
      <class name="org.company.Android.eCommerce_tc_3">
        <test-method is-config="true" signature="ConfigureAppium()[pri:0, instance:org.company.Android.eCommerce_tc_3@2a693f59]" started-at="2024-02-27T12:51:57 EST" name="ConfigureAppium" finished-at="2024-02-27T12:52:01 EST" duration-ms="4218" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ConfigureAppium -->
        <test-method signature="fillForm_ErrorValidation()[pri:0, instance:org.company.Android.eCommerce_tc_3@2a693f59]" started-at="2024-02-27T12:52:01 EST" name="fillForm_ErrorValidation" finished-at="2024-02-27T12:52:10 EST" duration-ms="9308" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected:<Please enter your name> but was:<Please yourname>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected:<Please enter your name> but was:<Please yourname>
at org.testng.AssertJUnit.assertEquals(AssertJUnit.java:115)
at org.testng.AssertJUnit.assertEquals(AssertJUnit.java:125)
at org.company.Android.eCommerce_tc_3.fillForm_ErrorValidation(eCommerce_tc_3.java:49)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillForm_ErrorValidation -->
        <test-method signature="fillForm_PositiveFlow()[pri:0, instance:org.company.Android.eCommerce_tc_3@2a693f59]" started-at="2024-02-27T12:52:11 EST" name="fillForm_PositiveFlow" finished-at="2024-02-27T12:52:27 EST" duration-ms="15823" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillForm_PositiveFlow -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:org.company.Android.eCommerce_tc_3@2a693f59]" started-at="2024-02-27T12:52:27 EST" name="tearDown" finished-at="2024-02-27T12:52:27 EST" duration-ms="195" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- org.company.Android.eCommerce_tc_3 -->
    </test> <!-- Error Validation Test -->
    <test started-at="2024-02-27T12:52:27 EST" name="End to end Framework test" finished-at="2024-02-27T12:53:08 EST" duration-ms="40443">
      <class name="org.company.Android.eCommerce_tc_2">
        <test-method is-config="true" signature="ConfigureAppium()[pri:0, instance:org.company.Android.eCommerce_tc_2@1a4927d6]" started-at="2024-02-27T12:52:27 EST" name="ConfigureAppium" finished-at="2024-02-27T12:52:30 EST" duration-ms="3308" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ConfigureAppium -->
        <test-method is-config="true" signature="preSetup()[pri:0, instance:org.company.Android.eCommerce_tc_2@1a4927d6]" started-at="2024-02-27T12:52:31 EST" name="preSetup" finished-at="2024-02-27T12:52:31 EST" duration-ms="500" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preSetup -->
        <test-method signature="fillForm(java.util.HashMap)[pri:0, instance:org.company.Android.eCommerce_tc_2@1a4927d6]" started-at="2024-02-27T12:52:31 EST" name="fillForm" data-provider="getData" finished-at="2024-02-27T12:52:48 EST" duration-ms="16487" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{name=Alicia Oleinik, country=Angola, gender=male}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillForm -->
        <test-method is-config="true" signature="preSetup()[pri:0, instance:org.company.Android.eCommerce_tc_2@1a4927d6]" started-at="2024-02-27T12:52:48 EST" name="preSetup" finished-at="2024-02-27T12:52:48 EST" duration-ms="554" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preSetup -->
        <test-method signature="fillForm(java.util.HashMap)[pri:0, instance:org.company.Android.eCommerce_tc_2@1a4927d6]" started-at="2024-02-27T12:52:48 EST" name="fillForm" data-provider="getData" finished-at="2024-02-27T12:53:07 EST" duration-ms="19341" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{name=li Oleinik, country=Argentina, gender=female}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillForm -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:org.company.Android.eCommerce_tc_2@1a4927d6]" started-at="2024-02-27T12:53:07 EST" name="tearDown" finished-at="2024-02-27T12:53:08 EST" duration-ms="148" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- org.company.Android.eCommerce_tc_2 -->
    </test> <!-- End to end Framework test -->
    <test started-at="2024-02-27T12:53:08 EST" name="IOS Test" finished-at="2024-02-27T12:53:08 EST" duration-ms="5">
      <class name="org.company.IOS.IOSBasics">
        <test-method is-config="true" signature="ConfigureAppium()[pri:0, instance:org.company.IOS.IOSBasics@6b09fb41]" started-at="2024-02-27T12:53:08 EST" name="ConfigureAppium" finished-at="2024-02-27T12:53:08 EST" duration-ms="0" status="FAIL">
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[For input string: "port"]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: For input string: "port"
at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
at java.base/java.lang.Integer.parseInt(Integer.java:668)
at java.base/java.lang.Integer.parseInt(Integer.java:786)
at org.company.testUtils.IOSBaseTest.ConfigureAppium(IOSBaseTest.java:47)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:390)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:325)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:180)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NumberFormatException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ConfigureAppium -->
        <test-method signature="iOSBasicsTest()[pri:0, instance:org.company.IOS.IOSBasics@6b09fb41]" started-at="2024-02-27T12:53:08 EST" name="iOSBasicsTest" finished-at="2024-02-27T12:53:08 EST" duration-ms="0" status="SKIP">
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[For input string: "port"]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: For input string: "port"
at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
at java.base/java.lang.Integer.parseInt(Integer.java:668)
at java.base/java.lang.Integer.parseInt(Integer.java:786)
at org.company.testUtils.IOSBaseTest.ConfigureAppium(IOSBaseTest.java:47)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:390)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:325)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:180)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NumberFormatException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iOSBasicsTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:org.company.IOS.IOSBasics@6b09fb41]" started-at="2024-02-27T12:53:08 EST" name="tearDown" finished-at="2024-02-27T12:53:08 EST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:org.company.IOS.IOSBasics@6b09fb41]" started-at="2024-02-27T12:53:08 EST" name="tearDown" finished-at="2024-02-27T12:53:08 EST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- org.company.IOS.IOSBasics -->
    </test> <!-- IOS Test -->
  </suite> <!-- Suite -->
</testng-results>
